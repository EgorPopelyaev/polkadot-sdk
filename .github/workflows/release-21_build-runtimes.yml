name: Release - Build runtimes and upload to s3
on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: Tag matching the actual release candidate with the format polkadot-stableYYMM-rcX or polkasdot-stableYYMM
        type: string


jobs:
  # check-synchronization:
  #   uses: paritytech-release/sync-workflows/.github/workflows/check-syncronization.yml@main

  validate-inputs:
    # needs: [check-synchronization]
    # if: ${{ needs.check-synchronization.outputs.checks_passed }} == 'true'
    runs-on: ubuntu-latest
    outputs:
        release_tag: ${{ steps.validate_inputs.outputs.release_tag }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0

      - name: Validate inputs
        id: validate_inputs
        run: |
          . ./.github/scripts/common/lib.sh

          RELEASE_TAG=$(validate_stable_tag ${{ inputs.release_tag }})
          echo "release_tag=${RELEASE_TAG}" >> $GITHUB_OUTPUT

  build-runtimes:
    needs: [validate-inputs]
    uses: "./.github/workflows/release-srtool.yml"
    with:
       excluded_runtimes: "asset-hub-rococo bridge-hub-rococo contracts-rococo coretime-rococo people-rococo rococo rococo-parachain substrate-test bp cumulus-test kitchensink minimal-template parachain-template penpal polkadot-test seedling shell frame-try sp solochain-template polkadot-sdk-docs-first"
       build_opts: "--features on-chain-release-build"
       profile: production

  upload-to-s3:
    needs: [build-runtimes]
    runs-on: ubuntu-latest
    environment: release
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_RELEASE_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_RELEASE_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0

      - name: Download artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          path: artifacts/runtimes

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload runtimes artifacts to s3
        run: |
          . ./.github/scripts/release/release_lib.sh
          upload_s3_runtimes_release_artifacts ${{ inputs.release_tag }}
